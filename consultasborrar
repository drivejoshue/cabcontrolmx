 minimapa reporte index 

 <div class="map-mini"
                   data-origin="{{ $r->origin_lat }},{{ $r->origin_lng }}"
                   data-dest="{{ $r->dest_lat }},{{ $r->dest_lng }}"
                   data-polyline="{{ $r->route_polyline ? base64_encode($r->route_polyline) : '' }}">
              </div>




con-- Disponible = status 'idle' y visto en los Ãºltimos 5 min, con turno abierto
SELECT d.id, d.name, d.phone, d.last_lat, d.last_lng, s.id AS shift_id, s.vehicle_id
FROM drivers d
JOIN driver_shifts s ON s.driver_id=d.id AND s.status='abierto'
WHERE d.tenant_id=1
  AND d.status='idle'
  AND (d.last_seen_at IS NULL OR d.last_seen_at >= NOW() - INTERVAL 5 MINUTE);
-- Sustituye :lat y :lng por tus valores
SELECT d.id, d.name,
       d.last_lat, d.last_lng,
       (111.045 * SQRT( POW(d.last_lat - :lat, 2) + POW((d.last_lng - :lng) * COS(RADIANS(:lat)), 2) )) AS approx_km
FROM drivers d
JOIN driver_shifts s ON s.driver_id=d.id AND s.status='abierto'
WHERE d.tenant_id=1
  AND d.status='idle'
  AND d.last_lat IS NOT NULL AND d.last_lng IS NOT NULL
  AND (d.last_seen_at IS NULL OR d.last_seen_at >= NOW() - INTERVAL 5 MINUTE)
ORDER BY approx_km ASC
LIMIT 10;



crear user tinker

php artisan tinker

use App\Models\User;
use Illuminate\Support\Facades\Hash;

// buscar por si ya existe
$user = User::where('email','admin@demo.local')->first();

// si no existe, crearlo:
if (!$user) {
  $user = User::create([
    'name' => 'Admin',
    'email' => 'admin@demo.local',
    'password' => Hash::make('Secret123!'),
    'tenant_id' => 1,   // si su app lo usa
  ]);
} else {
  // forzar nuevo password con hash
  $user->password = Hash::make('Secret123!');
  $user->save();
}

